---
export interface Props {
  page: string;
}

const { page = "1" } = Astro.props;

const endpoint =
  "https://api.themoviedb.org/3/movie/popular?api_key=" +
  import.meta.env.SECRET_KEY +
  "&language=en-US&page=" +
  page;

const response = await fetch(endpoint)
  .then((r) => r.json())
  .catch(function (error) {
    console.log(error);
  });

const movies = response.results;
const total_results = response.total_results;
const total_pages = response.total_pages;
---

<ul class="flex flex-wrap -m-4 min-h-screen transition-all">
  {
    movies.map((movie: any) => (
      <>
        <li class="p-4 md:w-1/4">
          <a
            href={"/movie/" + movie.id}
            class="block bg-white h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden hover:scale-110 transition-all"
          >
            <span>
              <img
                src={"https://image.tmdb.org/t/p/w500" + movie.backdrop_path}
                alt={"Poster of " + movie.original_title}
              />
            </span>
            <div class="p-2">
              <span>{movie.original_title} </span>
              <span>({movie.release_date})</span>
            </div>
          </a>
        </li>
      </>
    ))
  }
</ul>
<div class="text-center p-6 mt-12">
  <strong class="block mb-3">
    {
      page !== "1" ? (
        <>
          <a href={"/movies/" + (parseInt(page) - 1)}> PREV</a>
          <span> |</span>
        </>
      ) : null
    }
    {
      page !== total_pages ? (
        <a href={"/movies/" + (parseInt(page) + 1)}> NEXT</a>
      ) : null
    }
  </strong>
  <div class="text-sm">
    Page: {page} of {total_pages} ({total_results} Results).
  </div>
</div>
